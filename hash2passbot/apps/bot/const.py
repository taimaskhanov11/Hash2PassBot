from hash2passbot.loader import _


class Menu:

    def start(self):
        return _("–°–µ—Ä–≤–∏—Å –ø–æ –ø–æ–∏—Å–∫—É —Å—Ç—Ä–æ–∫–∏ –ø–∞—Ä–æ–ª—è –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É —Ö–µ—à—É.")

    def profile(self):
        return _("üîë ID: {}\n"
                 "üë§ –õ–æ–≥–∏–Ω: @{}\n"
                 "üìÑ –û—Å—Ç–∞–≤—à–∏–µ—Å—è —É—Å–ø–µ—à–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã - {}")

    def description(self):
        return _(
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∏–º—è –ø–æ—á—Ç–æ–≤–æ–≥–æ —è—â–∏–∫–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä–æ–ª–µ–π –æ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤, "
            "–∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ü–µ–ª–µ–≤–æ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ —è—â–∏–∫–∞. "
            "–ß—Ç–æ –µ—Å—Ç—å —É –Ω–∞—Å –≤ –±–∞–∑–µ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç—É—Ç: "
            "https://telegra.ph/Spisok-utechek-zagruzhennyh-v-bazu-dannyh-telegram-bota-MailLeaksBot-01-24")

    def support(self):
        return _("–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—Å–∞—Ç—å @chief_MailLeaks!")

    def check_subscribe_find(self):
        return _("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–π–¥–µ–Ω—ã, –≤–≤–µ–¥–∏—Ç–µ /start —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")

    def check_subscribe_not_find(self):
        return _("‚ùå –¢—ã –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–µ –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã")

    def get_subscriptions_templates(self):
        return _(
            "–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤.\n–ü—Ä–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–∏ –æ—Ç 250 –∑–∞–ø—Ä–æ—Å–æ–≤ ‚Äì –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ @MailLeaksBot.")

    def subscription_purchase_method_unpaid_checks(self):
        return _("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —á–µ–∫–æ–≤, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ")

    def subscription_purchase_method_created_check(self):
        return _("‚úÖ –ß–µ–∫ –Ω–∞ –æ–ø–ª–∞—Ç—É –ø–æ–¥–ø–∏—Å–∫–∏ {} –°–æ–∑–¥–∞–Ω!")

    def purchase_check(self):
        return _("‚ùóÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ 1 –º–∏–Ω—É—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ QIWI "
                 "–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 –º–∏–Ω—É—Ç —á–µ—Ä–µ–∑ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É.\n"
                 "–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ.")

    def get_password_hash_wait(self):
        return _("–û–∂–∏–¥–∞–π—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø–æ–∏—Å–∫–∞")

    def get_password_hash_incorrect(self):
        return _("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π hash")

    def _password_found_sub_pass(self):
        return _("–•–µ—à:\n{}\n—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç—Ä–æ–∫–µ –ø–∞—Ä–æ–ª—è:\n{}")

    def _password_found_sub_requests(self):
        return _("{}\n\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤: {}")

    def _password_found_unsub_pass(self):
        return _("–•–µ—à:\n{}\n—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç—Ä–æ–∫–µ –ø–∞—Ä–æ–ª—è:\n{}")

    def _password_found_unsub_requests(self):
        return _("{}\n–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–∞—Ä–æ–ª—å –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –∑–∞–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ –º–µ–Ω—é.")

    def search_not_found(self):
        return _("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–∞—Ä–æ–ª—å –ø–æ —Ö–µ—à—É {}")

    def search_unsub_not_found(self):
        return _("–ü–∞—Ä–æ–ª—å –¥–ª—è —Ö–µ—à–∞ {} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –±–∞–∑–µ. "
                 "–î–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –±–∞–∑–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –∑–∞–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ –º–µ–Ω—é –±–æ—Ç–∞.")

    def method_list(self):
        return list(filter(
            lambda x: not x.startswith('_') and x not in ["Config", "copy", "dict", "from_orm", "json", "schema",
                                                          "schema_json", "validate", "construct", "method_list",
                                                          "update_forward_refs"], dir(self)))


menu = Menu()

if __name__ == '__main__':
    # print(menu.dict())
    # print(dir(menu))
    # Menu.from_orm()
    method_list = list(filter(
        lambda x: not x.startswith('_') and x not in ["Config", "copy", "dict", "from_orm", "json", "schema",
                                                      "schema_json", "validate", "construct"], dir(menu)))
    print(method_list)
    # method_list = inspect.getmembers(menu, predicate=inspect.ismethod)
    print(getattr(menu, "search_unsub_not_found").__name__)
    # print(setattr(menu, "search_unsub_not_found", lambda x: 1))
    # print(menu)
    # print(menu.search_unsub_not_found)
